import subprocessimport globfrom Bio.PDB import PDBParserdef pdb_add_H(pdb_file):    """    Adds the hydrogens to the pdb in order to work propely with the structure.    If the addition is correct, the pdb file with the hydrogens will be created and returned.    """        pdbname = pdb_file[pdb_file.find("_")+1:pdb_file.find("/")]    result_folder = pdb_file[:pdb_file.find("/")+1]        subprocess.call(['pdb2pqr30',                      pdb_file,  # Input PDB filename                     result_folder+pdbname+'.pqr',  # Output PQR filename                     '--ff', 'AMBER',  # Use AMBER force field                     '--keep-chain',  # Keep the original chain IDs                     '--drop-water',  # Remove water molecules from the PDB file                     '--titration-state-method', 'propka',  # Use PROPKA to predict the protonation states of residues                     '--with-ph', '7.4',  # Set the pH to 7.4 for the PROPKA calculation                     '--pdb-output', result_folder+pdbname+'_H.pdb'  # Output a modified PDB file with added hydrogen atoms                    ])        # Check that the H have been added    hpdb = glob.glob(pdb_file[:pdb_file.find("_protein")] + "_H.pdb")[0]        # create structure objects for both    p = PDBParser()    str_noH = p.get_structure("1", pdb_file)    str_H = p.get_structure("2", hpdb)        natoms_noH = len( [atom for atom in str_noH.get_atoms()] )    natoms_H = len( [atom for atom in str_H.get_atoms()] )        if natoms_H > natoms_noH:        print("\n\nHydrogens added correctly.")        return(hpdb)    else:        print("\n\nHydrogens not added correctly!!")